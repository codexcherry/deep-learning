import tensorflow as tf
import matplotlib.pyplot as plt

# Load and preprocess MNIST
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_train, x_test = x_train[..., None]/255.0, x_test[..., None]/255.0  # Normalize and reshape

# Build CNN model
model = tf.keras.Sequential([
    tf.keras.layers.Conv2D(32, 3, activation='relu', input_shape=(28,28,1)),
    tf.keras.layers.MaxPooling2D(),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(10, activation='softmax')
])

# Compile and train
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=3)

# Evaluate
model.evaluate(x_test, y_test)

# Predict and show result
pred = model.predict(x_test[:2])
plt.imshow(x_test[1].reshape(28, 28), cmap='gray')
plt.title(f"Predicted: {tf.argmax(pred[1]).numpy()}")
plt.axis('off')
plt.show()
