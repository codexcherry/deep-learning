# Import necessary libraries
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Input, Flatten, Dense, BatchNormalization, Dropout
from tensorflow.keras.datasets import mnist

# Load and preprocess the MNIST dataset
(x_tr, y_tr), (x_ts, y_ts) = mnist.load_data()
x_tr, x_ts = x_tr / 255.0, x_ts / 255.0

# Build the model
m = Sequential([
    Flatten(input_shape=(28, 28)),
    BatchNormalization(),
    Dropout(0.2),
    Dense(64, activation='relu'),
    BatchNormalization(),
    Dropout(0.2),
    Dense(10, activation='softmax')
])

# Compile the model
m.compile(optimizer='adam',
          loss='sparse_categorical_crossentropy',
          metrics=['accuracy'])

# Train the model
m.fit(x_tr, y_tr, epochs=10, batch_size=32, validation_data=(x_ts, y_ts))

# Evaluate the model
tr_loss, tr_acc = m.evaluate(x_tr, y_tr)
ts_loss, ts_acc = m.evaluate(x_ts, y_ts)

# Print results
print("Train loss:", tr_loss, "Train Accuracy:", tr_acc)
print("Test loss:", ts_loss, "Test Accuracy:", ts_acc)
