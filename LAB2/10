import numpy as np
import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Embedding, GRU, Dense
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.datasets import imdb

# Load and preprocess data
(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=10000)
x_train = pad_sequences(x_train, maxlen=200).astype('int32')
x_test = pad_sequences(x_test, maxlen=200).astype('int32')

# Build, compile, and train model
model = Sequential([
    Embedding(10000, 128),
    GRU(64),
    Dense(1, activation='sigmoid')
])
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=3, batch_size=64, validation_split=0.2)

# Evaluate
print(f"\nTest Accuracy: {model.evaluate(x_test, y_test, verbose=0)[1]:.4f}")

# Prediction function
def predict_sentiment(review):
    padded = pad_sequences([review], maxlen=200).astype('int32')
    score = model.predict(padded, verbose=0)[0][0]
    print(f"Sentiment: {'positive' if score >= 0.5 else 'negative'} (Score: {score:.4f})")

# Examples
predict_sentiment(x_test[np.where(y_test == 1)[0][0]])  # positive
predict_sentiment(x_test[np.where(y_test == 0)[0][0]])  # negative